services:
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION}
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KEYCLOAK_BOOT_ADMIN_USERNAME}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KEYCLOAK_BOOT_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://db:5432/${KEYCLOAK_DATABASE}
      - KC_DB_USERNAME=${KEYCLOAK_DATABASE_USER}
      - KC_DB_PASSWORD=${KEYCLOAK_DATABASE_PASSWORD}
      - KC_HOSTNAME=${KEYCLOAK_DOMAIN}
      - KC_PROXY_HEADERS=xforwarded
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT=false
      - KC_HTTP_RELATIVE_PATH=/
    ports:
      - ${KEYCLOAK_PORT}:8080
    networks:
      keycloak_network:
        ipv4_address: 172.28.0.10
    command: start-dev
    extra_hosts:
      - "oauth.myproject.com:172.28.0.18"
    healthcheck:
      test: [ "CMD", "curl", "-f", "curl --head -fsS http://localhost:9000/health/ready" ]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s


  oauth2-proxy:
    container_name: oauth2-proxy
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.12.0
    volumes:
      - ./.docker/oauth2-proxy/oauth2-proxy.cfg:/etc/oauth2-proxy.cfg
    command: --config=/etc/oauth2-proxy.cfg
    networks:
      keycloak_network:
        ipv4_address: 172.28.0.12
    extra_hosts:
      - "keycloak.myproject.com:172.28.0.18"
      - "auth.myproject.com:172.28.0.18"
    ports:
      - "4180:4180"

  postgresql: 
    container_name: db
    build: 
      context: .
      dockerfile: ./.docker/postgresql/Dockerfile
      args:
        - POSTGRES_VERSION=${POSTGRES_VERSION}
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - PGDATA=/var/lib/postgresql/17/docker

      - KEYCLOAK_DATABASE=${KEYCLOAK_DATABASE}
      - KEYCLOAK_DATABASE_USER=${KEYCLOAK_DATABASE_USER}
      - KEYCLOAK_DATABASE_PASSWORD=${KEYCLOAK_DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql
      - ./.docker/postgresql/scripts/keycloak_init_db.sh:/docker-entrypoint-initdb.d/keycloak_init_db.sh
    networks:
      keycloak_network:
        ipv4_address: 172.28.0.14

  traefik:
    container_name: traefik
    image: traefik:v3.4
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./.docker/traefik/config/dynamic/:/etc/traefik/dynamic:ro
      - ./.docker/traefik/config/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./.docker/traefik/certs:/etc/traefik/certs/
      - ./.docker/traefik/logs/:/var/log/traefik/
    environment:
      - TZ=Asia/Tehran
    healthcheck:
      test: ['CMD', 'traefik', 'healthcheck', '--ping']
      interval: 10s
      timeout: 10s
      retries: 5
    extra_hosts:
      - "keycloak.myproject.com:172.28.0.10"
    networks:
      keycloak_network:
        ipv4_address: 172.28.0.18

  backend_1:
    image: arxi0xyz/python_simple
    container_name: backend_1
    environment:
      - APP_NAME=first application
    networks:
      - keycloak_network

  backend_2:
    image: arxi0xyz/python_simple
    container_name: backend_2
    environment:
      - APP_NAME=first application
    networks:
      - keycloak_network

networks:
  keycloak_network:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

volumes:
  postgresql_data:
    